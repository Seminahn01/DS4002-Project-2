# -*- coding: utf-8 -*-
"""EggPrice_ARIMA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tUUodlet4NFevePr2mIYvGW_EEthlH6d
"""

## install all necessary packages and libraries
install.packages('astsa')
library(astsa)
install.packages("forecast")
install.packages("tseries")
library(forecast)
library(tseries)

# load egg data
eggs <- read.csv("/content/egg prices.csv")

# check length
length(eggs$APU0000708111)

# turn dates into numeric values
eggs$observation_date <- as.numeric(gsub("-","",eggs$observation_date))

# create time series plot of egg prices
plot.ts(eggs$APU0000708111, main="Egg Prices Over Time",
        ylab="Average Egg Price", xlab="Time")

# nonstationary so apply log transformation
log_trans <- log(eggs$APU0000708111)

# create new time series plot
plot.ts(log_trans,
        main="Log Transformed Egg Prices Over Time",
        ylab="Log Average Egg Price",
        xlab="Time")

# Still nonstationary so apply first difference
diff_log <- diff(log_trans)

# create new time series plot
plot.ts(diff_log,
        main="First Differenced Log Egg Prices Over Time",
        ylab="Differenced Log Average Egg Price",
        xlab="Time")

# Use Augmented Dickey-Fuller Test for Stationarity
adf.test(diff_log, alternative = "stationary")

par(mfrow=c(1,2))  # Plot ACF and PACF side by side
acf(diff_log, main="ACF of Diff. Log Egg Prices")
pacf(diff_log, main="PACF of Diff. Log Egg Prices")
par(mfrow=c(1,1))  # Reset plot layout

# Try possible ARIMA models
model1 <- arima(diff_log, order=c(2,0,1))  # Try ARIMA(2,1,1)
model2 <- arima(diff_log, order=c(1,0,1))  # Try ARIMA(1,1,1)
model3 <- arima(diff_log, order=c(2,0,2))  # Try ARIMA(2,1,2)

# Compare model summaries
summary(model1)
summary(model2)
summary(model3)

# create ARIMA model with best orders using automated process
best_model <- auto.arima(diff_log)
summary(best_model)

# Box-Ljung Test for Residuals
Box.test(best_model$residuals, lag=1, type = "Ljung")

# Forecast the next 12 time periods (months)
forecast_values <- forecast(best_model, h=12)

# Plot the forecast
plot(forecast_values, main="Egg Price Forecast", ylab="Average Egg Price", xlab="Time")

# Calculate RMSE and MAE
actual_values <- tail(diff_log, 12)  # Last 12 actual values
predicted_values <- forecast_values$mean

rmse <- sqrt(mean((actual_values - predicted_values)^2))
mae <- mean(abs(actual_values - predicted_values))

print(paste("RMSE:", rmse))
print(paste("MAE:", mae))